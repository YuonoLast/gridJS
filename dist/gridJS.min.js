const widthsBreakpointsObject={width0:320,width1:550,width2:768,width3:1024,width4:1440,width5:2e3,width6:2561},widthsBreakpointsArray=objectServices.objectToArray(widthsBreakpointsObject);let settingsForGrid,windowWidthId,workVariablesGrid={allRows:"",quantityRows:"",quantityCards:"",neededQuanityRow:"",neededQuantityCardsInRow:"",neededClassForRow:""},allElementsGrid=[];function grid(a){settingsForGrid=a}(function(){windowWidthId=convertingWindowWidthNowInId($(window).width());let a=setInterval(function(){(settingsForGrid!==void 0||null!==settingsForGrid)&&(setElementsGrid(),selectModeBuildGrid(!0),clearInterval(a))},100)})(),$(window).resize(function(){let a=convertingWindowWidthNowInId($(window).width());!0===comparisonWidthsOnEqual(a)&&(windowWidthId=a,selectModeBuildGrid(!1))});function selectModeBuildGrid(a){!0===a?firstCallFirstBuildGrid():!1==a&&resizeCallResizeBuildGrid()}function firstCallFirstBuildGrid(){setCommonValuesForGrid(),setChangingValuesForGrid(),moveCardsInGridArea(),removeAllRow(),createNeededQuantityRow(),distributionCardsInCreateRow(),!0===settingsForGrid.activeFillerFunction&&addedFillersCards()}function resizeCallResizeBuildGrid(){!0===settingsForGrid.activeFillerFunction&&removeFillerCards(),setCommonValuesForGrid(),setChangingValuesForGrid(),moveCardsInGridArea(),removeAllRow(),createNeededQuantityRow(),distributionCardsInCreateRow(),!0===settingsForGrid.activeFillerFunction&&addedFillersCards()}function moveCardsInGridArea(){let b;for(let c=0;c<workVariablesGrid.quantityRows;c++){b=$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}:eq(${c}) .${settingsForGrid.gridElements[2]}`).length;for(let d=0;d<b;d++)$(`.${settingsForGrid.gridElements[0]}`).append($(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}:eq(${c}) .${settingsForGrid.gridElements[2]}`))[d]}}function removeAllRow(){$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}`).remove()}function createNeededQuantityRow(){let a=[];console.log(workVariablesGrid.neededQuanityRow);for(let b=0;b<workVariablesGrid.neededQuanityRow;b++)a.push(`<div class='${settingsForGrid.gridElements[1]} ${workVariablesGrid.neededClassForRow}'></div>`);for(let b=0;b<workVariablesGrid.neededQuanityRow;b++)$(`.${settingsForGrid.gridElements[0]}`).append(a[b])}function distributionCardsInCreateRow(){let b=$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[2]}`).length;for(let c=0;c<$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}`).length;c++)for(let d=0;d<workVariablesGrid.neededQuantityCardsInRow&&0!==b;d++)$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}`)[c].append($(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[2]}`)[0]),--b}function addedFillersCards(){let a=$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}`).length,b=[];for(let c=0;c<a;c++)if($(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}:eq(${c}) .${settingsForGrid.gridElements[2]}`).length===workVariablesGrid.neededQuantityCardsInRow)continue;else if($(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}:eq(${c}) .${settingsForGrid.gridElements[2]}`).length!==workVariablesGrid.neededQuantityCardsInRow)for(let d=0;d<workVariablesGrid.neededQuantityCardsInRow;d++)if(void 0!==$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}:eq(${c}) .${settingsForGrid.gridElements[2]}`)[d])continue;else void 0===$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}:eq(${c}) .${settingsForGrid.gridElements[2]}`)[d]&&(b.push(`<div class='${settingsForGrid.gridElements[2]} ${settingsForGrid.rowsFillerClasses[windowWidthId]}'></div>`),$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}:eq(${c})`).append(b[0]),delete b[0])}function removeFillerCards(){$(".filler").remove()}function setElementsGrid(){for(let a=0;a<$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]} .${settingsForGrid.gridElements[2]}`).length;a++)allElementsGrid.push($(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]} .${settingsForGrid.gridElements[2]}`)[a])}function convertingWindowWidthNowInId(a){for(let b=0;b<widthsBreakpointsArray.length;b++){if(!0===mathServices.numberInBetween(widthsBreakpointsArray[b],widthsBreakpointsArray[mathServices.increaseInNumber(b,1)],a))return b;if(!1===mathServices.numberInBetween(widthsBreakpointsArray[b],widthsBreakpointsArray[mathServices.increaseInNumber(b,1)],a))continue;else console.error("Window width not initialized")}}function comparisonWidthsOnEqual(a){if(windowWidthId!==a)return!0;return windowWidthId!==a&&void 0}function calculationNeededQuantityRows(){let a=workVariablesGrid.quantityCards/settingsForGrid.quantityCardsInRow[windowWidthId];if(!0===mathServices.isInteger(a)&&a!==workVariablesGrid.quantityCards)return a;return a>=workVariablesGrid.quantityCards?1:!1===mathServices.isInteger(a)?mathServices.createIntegerFloor(workVariablesGrid.quantityCards/settingsForGrid.quantityCardsInRow[windowWidthId])+1:void 0}function calculationNeededQuantityCardsInRow(){return 1===workVariablesGrid.neededQuanityRow?workVariablesGrid.quantityCards:settingsForGrid.quantityCardsInRow[windowWidthId]}function setCommonValuesForGrid(){workVariablesGrid.allRows=$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}`),workVariablesGrid.quantityRows=$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]}`).length,workVariablesGrid.quantityCards=$(`.${settingsForGrid.gridElements[0]} .${settingsForGrid.gridElements[1]} .${settingsForGrid.gridElements[2]}`).length}function setChangingValuesForGrid(){workVariablesGrid.neededQuanityRow=calculationNeededQuantityRows(),workVariablesGrid.neededQuantityCardsInRow=calculationNeededQuantityCardsInRow(),workVariablesGrid.neededClassForRow=settingsForGrid.rowsClasses[windowWidthId]}